#!/usr/bin/env python3
"""
Deployment script for SSM Health Analytics Portal
Stages the application for Render deployment
"""

import os
import shutil
import subprocess
import sys

def check_files():
    """Check that all required files exist"""
    required_files = [
        'deploy_secure_map.py',
        'templates/dashboard.html',
        'templates/login.html',
        'ssm_health_simple_color_coded_map.html',
        'ssm_health_market_analysis_polished.html',
        'requirements.txt',
        'render.yaml'
    ]
    
    missing_files = []
    for file_path in required_files:
        if not os.path.exists(file_path):
            missing_files.append(file_path)
    
    if missing_files:
        print("‚ùå Missing required files:")
        for file_path in missing_files:
            print(f"   - {file_path}")
        return False
    
    print("‚úÖ All required files found")
    return True

def check_git_status():
    """Check git status and ensure clean working directory"""
    try:
        result = subprocess.run(['git', 'status', '--porcelain'], 
                              capture_output=True, text=True, check=True)
        
        if result.stdout.strip():
            print("‚ö†Ô∏è  Uncommitted changes detected:")
            print(result.stdout)
            response = input("Continue with deployment? (y/N): ")
            if response.lower() != 'y':
                return False
        else:
            print("‚úÖ Git working directory is clean")
        
        return True
    except subprocess.CalledProcessError:
        print("‚ö†Ô∏è  Git not available or not a git repository")
        return True

def create_deployment_summary():
    """Create a deployment summary file"""
    summary = """# SSM Health Analytics Portal - Deployment Summary

## Application Overview
- **Name**: SSM Health Analytics Portal
- **Type**: Flask web application with secure authentication
- **Features**: 
  - Interactive facility mapping
  - Market analysis dashboard
  - Tabbed interface
  - Password-protected access

## Files Included
- `deploy_secure_map.py` - Main Flask application
- `templates/dashboard.html` - Tabbed interface template
- `templates/login.html` - Login page template
- `ssm_health_simple_color_coded_map.html` - Interactive facility map
- `ssm_health_market_analysis_polished.html` - Market analysis dashboard
- `requirements.txt` - Python dependencies
- `render.yaml` - Render deployment configuration

## Environment Variables
- `MAP_USERNAME` - Login username (default: ssm_team)
- `MAP_PASSWORD` - Login password (set in Render dashboard)
- `FLASK_SECRET_KEY` - Auto-generated by Render
- `PYTHON_VERSION` - Set to 3.11.7

## Deployment Steps
1. Push code to GitHub repository
2. Connect repository to Render
3. Set environment variables in Render dashboard
4. Deploy application

## Access Information
- **URL**: https://[app-name].onrender.com
- **Username**: ssm_team (or custom via env var)
- **Password**: Set via MAP_PASSWORD environment variable

## Security Features
- Password-protected access
- Session management
- Secure headers
- Environment variable configuration

## Features
### Tab 1: Facility Map
- Interactive Folium map
- Color-coded facility markers
- Facility type filtering
- Clickable markers with facility details

### Tab 2: Market Analysis
- Facilities per 100k population
- Market status distribution
- Income vs facility density
- Age mix categories

## Maintenance
- Monitor application logs in Render dashboard
- Update credentials via environment variables
- Scale resources as needed
"""
    
    with open('DEPLOYMENT_SUMMARY.md', 'w') as f:
        f.write(summary)
    
    print("üìã Deployment summary created: DEPLOYMENT_SUMMARY.md")

def main():
    """Main deployment staging function"""
    print("üöÄ Staging SSM Health Analytics Portal for Render deployment...")
    print("=" * 60)
    
    # Check files
    if not check_files():
        print("‚ùå Deployment staging failed - missing files")
        sys.exit(1)
    
    # Check git status
    if not check_git_status():
        print("‚ùå Deployment staging cancelled")
        sys.exit(1)
    
    # Create deployment summary
    create_deployment_summary()
    
    print("\n" + "=" * 60)
    print("‚úÖ Deployment staging complete!")
    print("\nüìã Next steps:")
    print("1. Review DEPLOYMENT_SUMMARY.md")
    print("2. Commit and push changes to GitHub:")
    print("   git add .")
    print("   git commit -m 'Add tabbed interface with market analysis dashboard'")
    print("   git push origin main")
    print("3. Deploy to Render:")
    print("   - Connect GitHub repository to Render")
    print("   - Set MAP_PASSWORD environment variable")
    print("   - Deploy application")
    print("\nüîó Render Dashboard: https://dashboard.render.com")
    print("üìö Documentation: https://render.com/docs")

if __name__ == "__main__":
    main() 